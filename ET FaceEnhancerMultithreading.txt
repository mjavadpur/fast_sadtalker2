
examples/source_image/full3.png
using safetensor as default
KeypointExtractor 1:  5.010831124000106
KeypointExtractor 2:  1.0142629999991186
CropAndExtract  Preprocesser:  6.02536596400023
CropAndExtract  self.net_recon:  1.3108982190005918
CropAndExtract  self.lm3d_std:  0.0009987840003304882
Init Time: 12.636250972747803
3DMM Extraction for source image
landmark Det:: 100% 1/1 [00:00<00:00, 16.11it/s]
3DMM Extraction In Video:: 100% 1/1 [00:00<00:00, 26.27it/s]
mel:: 100% 96/96 [00:00<00:00, 32204.53it/s]
audio2exp:: 100% 10/10 [00:00<00:00, 245.50it/s]
Face Renderer:: 100% 6/6 [00:18<00:00,  3.07s/it]
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (256, 259) to (256, 272) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
The generated video is named ./results/2023_12_07_07.02.59/full3##RD_Radio31_000.mp4
OpenCV: FFMPEG: tag 0x5634504d/'MP4V' is not supported with codec id 12 and format 'mp4 / MP4 (MPEG-4 Part 14)'
OpenCV: FFMPEG: fallback to use tag 0x7634706d/'mp4v'
seamlessClone:: 100% 96/96 [00:14<00:00,  6.76it/s]
The generated video is named ./results/2023_12_07_07.02.59/full3##RD_Radio31_000_full.mp4
face enhancer....
The generated video is named ./results/2023_12_07_07.02.59/full3##RD_Radio31_000_enhanced.mp4
Moviepy - Building video ./interpolate_videos.mp4.
MoviePy - Writing audio in interpolate_videosTEMP_MPY_wvf_snd.mp4
MoviePy - Done.
Moviepy - Writing video ./interpolate_videos.mp4

Moviepy - Done !
Moviepy - video ready ./interpolate_videos.mp4
Interpolated result is located in ./interpolate_videos.mp4.
The generated video is named: ./results/2023_12_07_07.02.59.mp4
Extract Time: 5.985077619552612
Gen Coeff Time: 1.3701364994049072
Render Time: 262.9997777938843
Interpolated Time: 13.180400848388672
 -- Inference exec time: 283.5371308326721